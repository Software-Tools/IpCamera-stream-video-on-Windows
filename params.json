{"name":"Ipcamera","tagline":"MJPEG Network Camera Server for Windows/Windows Phone 8.1 Store apps","body":"[![Build status](https://ci.appveyor.com/api/projects/status/7ucks5y2hqo7mphg?svg=true)](https://ci.appveyor.com/project/mmaitre314/IpCamera)\r\n[![NuGet package](http://mmaitre314.github.io/images/nuget.png)](https://www.nuget.org/packages/MMaitre.IpCamera/)\r\n\r\nAn API to stream video from cameras on Windows and Windows Phone devices (and probably to any HTTP MJPEG video player).\r\n\r\n![IpCamera](http://mmaitre314.github.io/images/IpCamera.jpg)\r\n\r\n`CameraServer` starts an HTTP server and streams the video from a camera on the local machine over a network in MJPEG format. \r\n```c#\r\n// Start the camera and open an HTTP listener on port 31415\r\nvar server = await CameraServer.CreateAsync(31415);\r\n```\r\n\r\nThe server supports multiple clients connected at the same time.\r\n\r\nUsing the [MediaCaptureReader](http://www.nuget.org/packages/MMaitre.MediaCaptureReader/) NuGet package client apps can display the video by creating an `HttpMjpegCaptureSource` and connecting it to `MediaElement`.\r\n\r\n```xml\r\n<MediaElement Name=\"Preview\" AutoPlay=\"True\" RealTimePlayback=\"True\"/>\r\n```\r\n```c#\r\n// Start an HTTP client, connect to port 31415, and display the video\r\nvar client = await HttpMjpegCaptureSource.CreateFromUriAsync(\"http://localhost:31415/\");\r\n\r\n// Start playback\r\nPreview.SetMediaStreamSource(client.Source);\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}